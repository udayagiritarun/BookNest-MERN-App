📌 Project Title: BookNest – A Full-Fledged Book Store Web Application

👥 Team Information:

Team ID: LTVIP2025TMID53248
Team Size: 5

Team Leader: Dudekula Vaheeda Banu
Team Member: Vyshnavi Eranti
Team Member: Jogi Siddhartha
Team Member: Tarun Udayagiri
Team Member: Vaishnavi Kummathi

🔗 GitHub Repository: https://github.com/udayagiritarun/BookNest-MERN-App

📝 Project Description:

BookNest is a scenario-based MERN stack application that reimagines online book shopping with multiple user roles: Customer, Seller, and Admin. It allows customers to explore and purchase books, sellers to manage their book inventory, and admins to monitor all platform activities.

Inspired by real-world use cases, BookNest provides seamless navigation, secure transactions, and user-friendly dashboards for each role. Whether you're a casual reader, a seller managing a book business, or an admin overseeing platform activity, BookNest is designed to serve your needs efficiently.

🌟 Key Features (Scenario-Based Use Cases):

User Registration and Login
A user signs up with their credentials and logs in using secure authentication. JWT-based login ensures role-based access.

Browsing and Searching Books
Users can view available books listed by various sellers, filter by category, author, and price, and search by keyword.

Add to Cart and Purchase
Users can add selected books to their cart, review them, and proceed to purchase using a checkout system.

Seller Panel
Sellers can register and login to their dedicated dashboard where they can:

Add new books

Update existing listings

View order requests and history

Admin Panel
Admins can:

Approve or reject seller registrations

Manage users and book listings

Monitor sales reports and platform performance

Order History and Tracking
Users can view their order history, track orders, and manage returns or issues.

Role-Based Dashboards
The interface dynamically changes depending on whether the user is a customer, seller, or admin. Each dashboard includes a clean and intuitive layout for their respective actions.

Authentication and Authorization
Role-based access with protected routes using JWT ensures that only authorized users can access sensitive data and perform operations.

🛠️ Tech Stack Used:

Frontend: ReactJS, TailwindCSS, Redux
Backend: Node.js, Express.js
Database: MongoDB (MongoDB Atlas)
Authentication: JWT
Other Tools: Git, GitHub, Render, Postman

✅ Project Status:
✔️ Completed – 90%
🚀 Submitted for Mentor Review

📧 Contact the Team
For inquiries or collaboration, feel free to reach out via our GitHub profiles or email.
